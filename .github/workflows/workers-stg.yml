name: Deploy to Cloudflare Workers - Staging
on:
  workflow_dispatch:
    inputs:
      deploycommands:
        description: 'Deploy commands?'
        required: false
        type: boolean
      skipdeploy:
        description: 'Skip deploy?'
        required: false
        type: boolean
  push:
    branches:
      - main
    paths:
      - 'apps/discord/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Staging
    name: Deploy
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: false

      - uses: actions/setup-node@v3
        with:
          node-version: 18.3
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Migrate db
        if: github.event.inputs.skipdeploy != 'true'
        #uses: cloudflare/wrangler-action@2.0.0
        run: npx wrangler d1 migrations apply frugal --env staging
        working-directory: ./apps/discord
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

      - name: Turbo build
        if: github.event.inputs.deploycommands == 'true'
        run: npx turbo build
        working-directory: ./apps/discord
        env:
          DISCORD_APP_ID: ${{ secrets.DISCORD_APPLICATION_ID }}
          DISCORD_PUBLIC_KEY: ${{ secrets.DISCORD_PUBLIC_KEY }}
          DISCORD_SECRET: ${{ secrets.DISCORD_SECRET }}
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_TOKEN }}

      - name: Deploy commands
        if: github.event.inputs.deploycommands == 'true'
        run: pnpm run sync
        working-directory: ./apps/discord
        env:
          DISCORD_APP_ID: ${{ secrets.DISCORD_APPLICATION_ID }}
          DISCORD_PUBLIC_KEY: ${{ secrets.DISCORD_PUBLIC_KEY }}
          DISCORD_SECRET: ${{ secrets.DISCORD_SECRET }}
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_TOKEN }}

      - name: Publish
        # uses: cloudflare/wrangler-action@2.0.0
        if: github.event.inputs.skipdeploy != 'true'
        run: npx wrangler publish --env staging
        working-directory: ./apps/discord
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN_WORKERS }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT_WORKERS }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          DISCORD_APP_ID: ${{ secrets.DISCORD_APPLICATION_ID }}
          DISCORD_PUBLIC_KEY: ${{ secrets.DISCORD_PUBLIC_KEY }}
          SUMMARY_SITE: ${{ secrets.SUMMARY_SITE }}
          ENVIROMENT: production
          RELEASE: ${{ github.sha }}
          BRANCH: ${{ env.GITHUB_REF_NAME }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      
  sentry:
    name: Create Sentry release
    uses: dougley/frugal/.github/workflows/sentry.yml@main
    if: github.event.inputs.skipdeploy != 'true'
    secrets: inherit
    with:
      environment: staging
      project: workers
